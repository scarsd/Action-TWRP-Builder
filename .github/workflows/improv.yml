name: Build TWRP as vendor_boot.img

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  DEVICE_CODENAME: "AD8"           # Replace with your device codename
  MANUFACTURER: "tecno"            # Replace with manufacturer

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4     # Updated to v4

    - name: Set up Swap Space
      uses: pierotofy/set-swap-space@master

    - name: Install Dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          git-core gnupg flex bison build-essential zip curl \
          zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \
          lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev \
          libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig \
          python3 android-tools-fsutils abootimg simg2img img2simg \
          cpio lz4-dtbo

    - name: Download vendor_boot.img
      run: |
        wget -O vendor_boot.img "https://files.fm/f/8t9a5vj6b7"  # Direct link to your file

    - name: Extract vendor_boot.img
      run: |
        mkdir -p extracted_vendor_boot
        unpack_bootimg --boot_img vendor_boot.img --out extracted_vendor_boot
        echo "Kernel size: $(du -sh extracted_vendor_boot/kernel)"
        echo "Ramdisk size: $(du -sh extracted_vendor_boot/vendor_ramdisk)"

    - name: Clone TWRP Minimal Manifest
      run: |
        repo init -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-12.1
        repo sync -j$(nproc) --force-sync --no-clone-bundle --no-tags

    - name: Copy Device Tree
      run: |
        mkdir -p device/${MANUFACTURER}/${DEVICE_CODENAME}
        cp -r ${GITHUB_WORKSPACE}/device_tree/* device/${MANUFACTURER}/${DEVICE_CODENAME}/

    - name: Build TWRP
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch twrp_${DEVICE_CODENAME}-eng
        mka recoveryimage

    - name: Repack TWRP into vendor_boot.img
      run: |
        # Use TWRP recovery.img as the new vendor_ramdisk
        gzip -c out/target/product/${DEVICE_CODENAME}/recovery.img > vendor_ramdisk.gz

        # Repack with original kernel and TWRP ramdisk
        mkbootimg \
          --kernel extracted_vendor_boot/kernel \
          --ramdisk vendor_ramdisk.gz \
          --cmdline "$(cat extracted_vendor_boot/vendor_boot.img-cmdline)" \
          --base $(cat extracted_vendor_boot/vendor_boot.img-base) \
          --pagesize $(cat extracted_vendor_boot/vendor_boot.img-pagesize) \
          --os_version $(cat extracted_vendor_boot/vendor_boot.img-os_version) \
          --os_patch_level $(cat extracted_vendor_boot/vendor_boot.img-os_patch_level) \
          --output twrp_vendor_boot.img

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4     # Updated to v4
      with:
        name: TWRP-vendor_boot-${DEVICE_CODENAME}.img
        path: twrp_vendor_boot.img
